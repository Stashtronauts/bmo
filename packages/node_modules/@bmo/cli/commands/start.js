#!/usr/bin/env node
import httpServer from '@bmo/httpServer';
import es6require from '@bmo/es6Require';
import commander from 'commander';

commander
	.option('-p, --port', 'override the port')
	.option('-d, --baseDir', 'Set the base directory')
	.option('-c, --configDir', 'Set the configuration directory');

const start = async (cliConfig) => {
	const userConfig = await config();
	const serverConfig = { ...userConfig, ...cliConfig };
	serverConfig.baseDir = commander.baseDir || cwd;
	const server = httpServer(serverConfig);
	await server.start();
	console.log(`Server listening on ${serverConfig.server.port}`);
};

const cwd = process.cwd();
commander.parse(process.argv);
let config;
try {
	const configPath = commander.configDir || `${cwd}/config`;
	// TODO Escape hatch to change config directory
	config = es6require(require.resolve(configPath));
} catch (e) {
	console.error('Unable to load configuration. Ensure that a config directory is in the current directory');
	console.log(e);
	process.exit(1);
}
try {
	start({ port: commander.port });
} catch (e) {
	console.error('Unable to load configuration. Ensure that a config directory is in the current directory');
	console.error(e);
	process.exit(1);
}
